name: Rust

on:
  push:
    branches: [ "master" ]
    tags: [ "v*" ]
  pull_request:
    branches: [ "master" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Build
      run: cargo build --release --verbose
    - name: Run tests
      run: cargo test --verbose

  release:
    if: startsWith(github.ref, 'refs/tags/v')
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            binary_name: malibu-bouncer
            asset_suffix: linux-x86_64
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            binary_name: malibu-bouncer.exe
            asset_suffix: windows-x86_64.exe
    runs-on: ${{ matrix.os }}
    
    steps:
    - uses: actions/checkout@v4
    - name: Build Release
      run: cargo build --release --verbose
    - name: Verify Binary Exists (Linux)
      if: matrix.os == 'ubuntu-latest'
      run: |
        if [ ! -f ./target/release/${{ matrix.binary_name }} ]; then
          echo "Error: Binary not found at ./target/release/${{ matrix.binary_name }}"
          exit 1
        fi
        echo "Binary size: $(stat -c%s ./target/release/${{ matrix.binary_name }}) bytes"
    - name: Verify Binary Exists (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        if (!(Test-Path "./target/release/${{ matrix.binary_name }}")) {
          Write-Host "Error: Binary not found at ./target/release/${{ matrix.binary_name }}"
          exit 1
        }
        $size = (Get-Item "./target/release/${{ matrix.binary_name }}").Length
        Write-Host "Binary size: $size bytes"
    - name: Create Release and Upload Asset
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        gh release create ${{ github.ref_name }} \
          --title "Release ${{ github.ref_name }}" \
          --notes "Automated release for ${{ github.ref_name }}" \
          ./target/release/${{ matrix.binary_name }}#malibu-bouncer-${{ github.ref_name }}-${{ matrix.asset_suffix }} || \
        gh release upload ${{ github.ref_name }} \
          ./target/release/${{ matrix.binary_name }}#malibu-bouncer-${{ github.ref_name }}-${{ matrix.asset_suffix }}
